{
  "openapi": "3.0.3",
  "info": {
    "title": "Serega Messenger API",
    "description": "Anonymous messenger API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/",
      "description": "Local server"
    }
  ],
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterRequest" }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "409": { "$ref": "#/components/responses/Conflict" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login with username and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh access token using refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RefreshRequest" }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "description": "New access token issued",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RefreshResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get public profile and pre_key by user ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": {
            "description": "Public user data",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserProfileResponse" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },
    "/users/name/{username}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get public profile and pre_key by username (case insensitive)",
        "parameters": [
          { "name": "username", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Public user data",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserProfileResponse" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get public profile and pre_key by access token",
        "responses": {
          "200": {
            "description": "Public user data",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserProfileResponse" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },
    "/chats/{chat_id}/messages": {
      "post": {
        "tags": ["Chats"],
        "summary": "Send a message to a chat",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "chat_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SendMessageRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message successfully sent",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SendMessageResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      },
      "get": {
        "tags": ["Chats"],
        "summary": "Get messages from a chat",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "chat_id", "in": "path", "required": true, "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 50 } },
          { "name": "offset", "in": "query", "schema": { "type": "integer", "default": 0 } }
        ],
        "responses": {
          "200": {
            "description": "List of messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/MessageResponse" }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },
    "/updates": {
      "get": {
        "tags": ["Updates"],
        "summary": "Get pending updates for the authenticated user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 50, "minimum": 1, "maximum": 200 },
            "description": "Maximum number of updates to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": { "type": "integer", "default": 0, "minimum": 0 },
            "description": "Offset for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "List of updates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UpdateResponse" }
                },
                "examples": {
                  "messageUpdate": {
                    "summary": "New message update",
                    "value": [
                      {
                        "id": 1012,
                        "type": "message",
                        "payload": {
                          "id": 555,
                          "sender_id": 7,
                          "receiver_id": 42,
                          "content": "BASE64...",
                          "created_at": "2025-08-28T12:34:56Z",
                          "seen": false
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" },
          "identity_key": { "type": "string", "description": "Base64 identity key" },
          "pre_key": { "type": "string", "description": "Base64 public pre_key" }
        },
        "required": ["username", "password", "identity_key", "pre_key"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["username", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "access_token": { "type": "string" },
          "refresh_token": { "type": "string" },
          "expires_in": { "type": "integer" }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "properties": {
          "refresh_token": { "type": "string" }
        },
        "required": ["refresh_token"]
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "access_token": { "type": "string" },
          "refresh_token": { "type": "string" },
          "expires_in": { "type": "integer" }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "username": { "type": "string" },
          "identity_key": { "type": "string" },
          "pre_key": { "type": "string" }
        }
      },
      "SendMessageRequest": {
        "type": "object",
        "properties": {
          "content": { "type": "string", "description": "Encrypted message content" }
        },
        "required": ["content"]
      },
      "SendMessageResponse": {
        "type": "object",
        "properties": {
          "message_id": { "type": "integer" }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "sender_id": { "type": "integer" },
          "receiver_id": { "type": "integer" },
          "content": { "type": "string", "description": "Encrypted message content" },
          "created_at": { "type": "string", "format": "date-time" },
          "seen": { "type": "boolean" }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "type": { "type": "string", "description": "Type of update (e.g. message, seen, chat_created)" },
          "payload": {
            "type": "object",
            "description": "Event-specific payload (e.g. new message data)"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Invalid request"
      },
      "Unauthorized": {
        "description": "Authentication required or token is invalid"
      },
      "Conflict": {
        "description": "Resource conflict (e.g. username already taken)"
      },
      "NotFound": {
        "description": "Resource not found"
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and token management"
    },
    {
      "name": "Users",
      "description": "User profiles and keys"
    },
    {
      "name": "Chats",
      "description": "Chat messages"
    },
    {
      "name": "Updates",
      "description": "Updates via long polling"
    }
  ]
}
